// Fix final para pre√ßos de usu√°rios Restaurante
// Execute este c√≥digo no console do navegador

// Aguardar carregamento completo e aplicar corre√ß√£o
setTimeout(function() {
  console.log('üçΩÔ∏è Iniciando corre√ß√£o para usu√°rios Restaurante...');
  
  // Verificar se √© usu√°rio restaurante
  if (window.currentUser && window.currentUser.role === 'customer_restaurant') {
    console.log('‚úÖ Usu√°rio Restaurante detectado:', window.currentUser.name);
    
    // Fun√ß√£o para corrigir um grid de pre√ßos
    function fixPriceGrid(grid) {
      // Verificar se √© realmente um grid de pre√ßos
      if (grid.innerHTML.includes('√Ä Vista') && grid.innerHTML.includes('30')) {
        console.log('üîß Corrigindo grid de pre√ßos...');
        
        // Pegar o pre√ßo √† vista
        const avistaElement = grid.querySelector('div:first-child div:last-child');
        const price = avistaElement ? avistaElement.textContent : 'R$ 0,00';
        
        // Substituir todo o conte√∫do
        grid.innerHTML = `
          <div style="padding: 1rem; background: linear-gradient(135deg, #f59e0b 0%, #ea580c 100%); border-radius: 0.5rem; text-align: center; color: white; box-shadow: 0 4px 6px rgba(245, 158, 11, 0.2);">
            <div style="font-size: 0.875rem; opacity: 0.9; margin-bottom: 0.25rem;">üçΩÔ∏è Pre√ßo Especial Restaurante</div>
            <div style="font-size: 1.5rem; font-weight: 700; margin-bottom: 0.25rem;">${price}</div>
            <div style="font-size: 0.75rem; opacity: 0.8;">Pagamento √Ä Vista</div>
          </div>
        `;
        
        // Ajustar o grid para uma coluna
        grid.style.gridTemplateColumns = '1fr';
        
        return true;
      }
      return false;
    }
    
    // Aplicar corre√ß√£o inicial
    function applyFix() {
      const grids = document.querySelectorAll('div[style*="grid-template-columns"]');
      let fixedCount = 0;
      
      grids.forEach(grid => {
        if (fixPriceGrid(grid)) {
          fixedCount++;
        }
      });
      
      console.log(`üéØ ${fixedCount} grids de pre√ßo corrigidos`);
      return fixedCount;
    }
    
    // Aplicar corre√ß√£o inicial
    applyFix();
    
    // Observar mudan√ßas no DOM e reaplicar a corre√ß√£o quando necess√°rio
    const observer = new MutationObserver(function(mutations) {
      let needsFix = false;
      
      mutations.forEach(mutation => {
        if (mutation.type === 'childList') {
          mutation.addedNodes.forEach(node => {
            if (node.nodeType === 1 && node.innerHTML && node.innerHTML.includes('grid-template-columns')) {
              needsFix = true;
            }
          });
        }
      });
      
      if (needsFix) {
        setTimeout(applyFix, 100);
      }
    });
    
    // Observar o body para mudan√ßas
    observer.observe(document.body, {
      childList: true,
      subtree: true
    });
    
    console.log('‚úÖ Corre√ß√£o aplicada com sucesso! Usu√°rios restaurante agora veem apenas pre√ßo √† vista.');
    console.log('üîÑ Sistema de monitoramento ativado para reaplicar corre√ß√µes automaticamente.');
    
  } else {
    console.log('‚ÑπÔ∏è Usu√°rio n√£o √© do tipo Restaurante, corre√ß√£o n√£o aplicada.');
  }
}, 1000);

console.log('üìù Script de corre√ß√£o para usu√°rios Restaurante carregado.');